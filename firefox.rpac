#!/bin/bash

# Overloaded variables:
PKG="firefox"
VER="43.0.1"
EXT="tar.xz" # extension of download
URL="https://ftp.mozilla.org/pub/mozilla.org/$PKG/releases/$VER/source/$PKG-$VER.source.$EXT"
DESCRIPTION="Firefox is a stand alone browser based on the Mozilla codebase."
CFLAGS="-f client.mk"
CONF_FLAGS=""
FAKEROOT=$PKG_DIR/$PKG-$VER
DEPS="alsa-lib gtk+ nss unzip yasm zip icu libevent python2"

#---------------------------------------------------------------
# Overloadable functions:

# Dl package
downloadSource() {
	cd $SRC_DIR
	logMessage "Downloading $PKG"
	curl -L -O $URL || die "Downloading $PKG failed"
	mv $PKG-$VER.source.$EXT $PKG-$VER.$EXT
}

compileSource() {
	cd $SRC_DIR/$PKG-$VER
	logMessage "Compiling $PKG"

logMessage "Creating $PKG config file"
cat > mozconfig << "EOF"
# If you have a multicore machine, all cores will be used by default.
# If desired, you can reduce the number of cores used, e.g. to 1, by
# uncommenting the next line and setting a valid number of CPU cores.
#mk_add_options MOZ_MAKE_FLAGS="-j1"

# If you have installed DBus-Glib comment out this line:
ac_add_options --disable-dbus

# If you have installed dbus-glib, and you have installed (or will install)
# wireless-tools, and you wish to use geolocation web services, comment out
# this line
ac_add_options --disable-necko-wifi

# GStreamer is necessary for H.264 video playback in HTML5 Video Player;
# to be enabled, also remember to set "media.gstreamer.enabled" to "true"
# in about:config. If you have GStreamer 1.x.y, comment out this line and
# uncomment the following one:
ac_add_options --disable-gstreamer
#ac_add_options --enable-gstreamer=1.0

# Uncomment these lines if you have installed optional dependencies:
#ac_add_options --enable-system-hunspell
#ac_add_options --enable-startup-notification

# Comment out following option if you have PulseAudio installed
ac_add_options --disable-pulseaudio

# If you have installed GConf, comment out this line
ac_add_options --disable-gconf

# Comment out following options if you have not installed
# recommended dependencies:
#ac_add_options --enable-system-sqlite
ac_add_options --with-system-libevent
#ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser

ac_add_options --disable-crashreporter
ac_add_options --disable-updater
ac_add_options --disable-tests

ac_add_options --enable-optimize
ac_add_options --enable-strip
ac_add_options --enable-install-strip

ac_add_options --enable-gio
ac_add_options --enable-official-branding
ac_add_options --enable-safe-browsing
ac_add_options --enable-url-classifier

# From firefox-40, using system cairo causes firefox to crash
# frequently when it is doing background rendering in a tab.
#ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-pthreads

ac_add_options --with-system-bz2
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir
EOF

	make $GLOBAL_CFLAGS $CFLAGS || die "Compiling $PKG source failed"
}

# Take compiled files and make them into a standalone package
buildPackage() {
	logMessage "Building $PKG to fakeroot"
	cd $SRC_DIR/$PKG-$VER
	make DESTDIR="$FAKEROOT" -f client.mk install INSTALL_SDK= || die "$PKG make install failed"

	chown -R 0:0 $FAKEROOT/usr/lib/$PKG-$VER || die "Chown $PKG files failed"
	mkdir -pv $FAKEROOT/usr/lib/mozilla/plugins

	cd $PKG_DIR
	logMessage "Tarring and compressing $PKG"
	tar -cvzf $PKG-$VER.tar.gz $PKG-$VER || die "$PKG package creation failed"
	logMessage "Deleting $PKG fakeroot"
	rm -rf $PKG-$VER
}

# records the files installed
postinstallPackage() {
	logMessage "PostInstall $PKG"
	cd $FAKEROOT

	ln -sfv   $FAKEROOT/usr/lib/mozilla/plugins $FAKEROOT/usr/lib/$PKG-$VER/browser || die "Symlink $PKG plugins dir failed"

	logMessage "Logging installed files of $PKG"
	find . ! -type d | sed -e 's@./@/@' > $PKG_INDEX/$PKG-$VER

	logMessage "Deleting $PKG fakeroot"
	cd $PKG_DIR
	rm -rf $FAKEROOT
	return
}
